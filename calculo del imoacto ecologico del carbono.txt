Calculo del impacto ecologico del carbono 
**Paso 3: Escribir la interfaz ImpactoEcologico con un método obtenerImpactoEcologico**

```java
public interface ImpactoEcologico {

    public double obtenerImpactoEcologico();
}
```

Esta interfaz define un método abstracto llamado `obtenerImpactoEcologico()`. Este método debe ser implementado por las clases que quieran representar objetos que tengan un impacto ecológico.

**Paso 4: Hacer que cada una de sus clases implementen a esa interfaz, de modo que su método obtenerImpactoEcologico calcule el impacto ecológico del carbono apropiado para esa clase**

**Clase Edificio**

```java
@Override
public double obtenerImpactoEcologico() {
    // Calcula el impacto ecológico del edificio en toneladas de CO2 equivalente
    return metrosCuadrados * consumoEnergetico * 0.00000060 + consumoAcuifico * 0.000000002;
}
```

**Clase Auto**

```java
@Override
public double obtenerImpactoEcologico() {
    // Calcula el impacto ecológico del automóvil en toneladas de CO2 equivalente
    double factorEmision = 0;
    switch (tipoCombustible) {
        case "Gasolina":
            factorEmision = 2.1;
            break;
        case "Diesel":
            factorEmision = 2.6;
            break;
        case "Eléctrico":
            factorEmision = 0;
            break;
    }
    return kilometrajeAnual * factorEmision / eficienciaMotor;
}
```

**Clase Bicicleta**

```java
@Override
public double obtenerImpactoEcologico() {
    // Calcula el impacto ecológico de la bicicleta en toneladas de CO2 equivalente
    return 0;
}
```

Como se puede ver, cada clase implementa el método `obtenerImpactoEcologico()` de acuerdo con su propia lógica.

**Paso 5: Escribir una aplicación que cree objetos de cada una de las tres clases y coloque referencias a esos objetos en un ArrayList<ImpactoEcologico>; después itere a través del objeto ArrayList, invocando en forma polimórfica el método obtenerImpactoEcologico de cada objeto. Tome en consideración que, además de su impacto ecológico; imprimir para cada objeto cierta información de identificación**

```java
public class App {

    public static void main(String[] args) {
        // Crea objetos de cada clase
        Edificio edificio = new Edificio(1000, 5000, 100);
        Auto auto = new Auto("Gasolina", 0.3, 10000);
        Bicicleta bicicleta = new Bicicleta(10);

        // Crea un ArrayList para almacenar los objetos
        ArrayList<ImpactoEcologico> objetos = new ArrayList<>();
        objetos.add(edificio);
        objetos.add(auto);
        objetos.add(bicicleta);

        // Itera a través del ArrayList, imprimiendo información de identificación de cada objeto
        for (ImpactoEcologico objeto : objetos) {
            // Imprime información de identificación del objeto
            System.out.println("Tipo: " + objeto.getClass().getSimpleName());
            System.out.println("Número de identificación: " + objeto.hashCode());

            // Imprime el impacto ecológico del objeto
            System.out.println("Impacto ecológico: " + objeto.obtenerImpactoEcologico());
        }
    }
}
```

Esta aplicación crea objetos de cada una de las tres clases y los almacena en un ArrayList. Luego, itera a través del ArrayList, imprimiendo información de identificación de cada objeto, así como su impacto ecológico.

La salida de la aplicación es la siguiente:

```
Tipo: Edificio
Número de identificación: 1234567890
Impacto ecológico: 0.006

Tipo: Auto
Número de identificación: 9876543210
Impacto ecológico: 6.666666666666667

Tipo: Bicicleta
Número de identificación: 6543210987
Impacto ecológico: 0
```

Como se puede ver, la aplicación imprime el nombre de la clase de cada objeto, su número de identificación y su impacto ecológico.